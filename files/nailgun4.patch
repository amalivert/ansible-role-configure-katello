From 05e7842d086a7d8003c193f86f45cd6d42ab0062 Mon Sep 17 00:00:00 2001
From: Andrew Kofink <akofink@redhat.com>
Date: Fri, 30 Jun 2017 12:54:51 -0400
Subject: [PATCH] Allow getting and deleting AK subscriptions

---
 nailgun/entities.py    | 34 ++++++++++++++++++++++++++++++++++
 tests/test_entities.py |  2 ++
 2 files changed, 36 insertions(+)

diff --git a/nailgun/entities.py b/nailgun/entities.py
index 6a6b664..8e27e45 100644
--- a/nailgun/entities.py
+++ b/nailgun/entities.py
@@ -310,6 +310,40 @@ def add_subscriptions(self, synchronous=True, **kwargs):
         response = client.put(self.path('add_subscriptions'), **kwargs)
         return _handle_response(response, self._server_config, synchronous)
 
+    def remove_subscriptions(self, synchronous=True, **kwargs):
+        """Helper for removing subscriptions from an activation key.
+
+        :param synchronous: What should happen if the server returns an HTTP
+            202 (accepted) status code? Wait for the task to complete if
+            ``True``. Immediately return the server's response otherwise.
+        :param kwargs: Arguments to pass to requests.
+        :returns: The server's response, with all JSON decoded.
+        :raises: ``requests.exceptions.HTTPError`` If the server responds with
+            an HTTP 4XX or 5XX message.
+
+        """
+        kwargs = kwargs.copy()  # shadow the passed-in kwargs
+        kwargs.update(self._server_config.get_client_kwargs())
+        response = client.put(self.path('remove_subscriptions'), **kwargs)
+        return _handle_response(response, self._server_config, synchronous)
+
+    def subscriptions(self, synchronous=True, **kwargs):
+        """Helper for retrieving subscriptions on an activation key.
+
+        :param synchronous: What should happen if the server returns an HTTP
+            202 (accepted) status code? Wait for the task to complete if
+            ``True``. Immediately return the server's response otherwise.
+        :param kwargs: Arguments to pass to requests.
+        :returns: The server's response, with all JSON decoded.
+        :raises: ``requests.exceptions.HTTPError`` If the server responds with
+            an HTTP 4XX or 5XX message.
+
+        """
+        kwargs = kwargs.copy()  # shadow the passed-in kwargs
+        kwargs.update(self._server_config.get_client_kwargs())
+        response = client.get(self.path('subscriptions'), **kwargs)
+        return _handle_response(response, self._server_config, synchronous)
+
     def content_override(self, synchronous=True, **kwargs):
         """Override the content of an activation key.
 
diff --git a/tests/test_entities.py b/tests/test_entities.py
index e5d9ded..e7d2033 100644
--- a/tests/test_entities.py
+++ b/tests/test_entities.py
@@ -1532,6 +1532,8 @@ def setUpClass(cls):
             (entities.AbstractDockerContainer(**generic).power, 'put'),
             (entities.ActivationKey(**generic).add_host_collection, 'post'),
             (entities.ActivationKey(**generic).add_subscriptions, 'put'),
+            (entities.ActivationKey(**generic).remove_subscriptions, 'put'),
+            (entities.ActivationKey(**generic).subscriptions, 'get'),
             (entities.ActivationKey(**generic).content_override, 'put'),
             (entities.ActivationKey(**generic).product_content, 'get'),
             (entities.ActivationKey(**generic).remove_host_collection, 'put'),

