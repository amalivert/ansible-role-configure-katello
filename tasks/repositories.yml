---
#- name: Testing yaml dict, list, references
#  debug:
#    #msg: "ORG={{ item.1.name }}"
#    msg: "ORG={{ item.0.name }} reposet={{ item.1.name }} product={{ item.1.product }#} repositories={{ item.1.repositories }} repo={{ item.1.repo_name }} state={{ #item.1.state }}"
#  with_subelements:
#    - "{{ configure_katello_organizations }}"
#    - products
#  when: 
#    - item.0.state == "present"
#    - item.1.product is defined

- name: "Enable repository sets"
  katello_repository_set:
    username: "{{ configure_katello_username }}"
    password: "{{ configure_katello_password }}"
    server_url: "{{ configure_katello_server_url }}"
    verify_ssl: "{{ configure_katello_verify_ssl }}"
    name: "{{  item.1.name }}"
    organization: "{{ item.0.name }}"
    product: "{{ item.1.product }}"
    repositories: "{{ item.1.repositories }}"
    state: "{{ item.1.state }}"
  with_subelements:
    - "{{ configure_katello_organizations }}"
    - products
  when: 
    - item.0.state == "present"
    - item.1.product is defined
  #with_items: "{{ configure_katello_repository_sets }}"
  #when: configure_katello_repository_sets is defined
  #notify:
  #  - sync all repositories

- name: "Enable Custom repositories"
  katello_repository:
    username: "{{ configure_katello_username }}"
    password: "{{ configure_katello_password }}"
    server_url: "{{ configure_katello_server_url }}"
    verify_ssl: "{{ configure_katello_verify_ssl }}"
    name: "{{  item.name }}"
    organization: "{{ item.organization }}"
    product: "{{ item.product }}"
    state: "{{ item.state | default(omit) }}"
    content_type: "{{ item.content_type }}"
    url: "{{ item.url | default(omit) }}"
    gpg_key: "{{ item.gpg_key | default(omit) }}"
    download_policy: "{{ item.download_policy | default(omit) }}"
  with_items: "{{ configure_katello_repositories }}"
  when: configure_katello_repositories is defined
  notify:
    - sync all repositories

#- name: Sync Repositories
#  meta: flush_handlers
